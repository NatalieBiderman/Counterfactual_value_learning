p2[[i]] <- ggplot(subset(plot.data.fits, coef=="Intercept"),
aes(x=value, fill=condition, linetype=choice)) +
geom_density(alpha=0.3) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = fits) +
geom_point(data=fits, aes(x=median, y=y_loc, color=condition, shape=choice, fill="white"), size=2) +
labs(x="Coef estimates")
p[[i]] <- plot_grid(p1[[i]], p2[[i]], ncol=1, nrow=2)
}
i=1
exps <- unique(fits$Exp)
p1 <- list(); p2 <- list
curr_fits <- subset(fits, Exp==exps[i])
curr_data_fits <- subset(plot.data.fits, Exp==exps[i])
if ("Exp7a" %in% curr_fits$Exp){
curr_fits$condition <- factor(as.factor(curr_fits$condition), levels=c("LowReward","HighReward"))
curr_data_fits$condition <- factor(as.factor(curr_data_fits$condition), levels=c("LowReward","HighReward"))
}
curr_fits
p1[[i]] <- ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
p1[[i]]
curr_data_fits
plot.data.fits
arrange_fits <- function(coef_list, Exp_name){
coefs <- data.frame(name=rownames(coef_list$summary_group_coefs),
median=coef_list$summary_group_coefs$Median,
high_95=coef_list$summary_group_coefs$high95HDI,
low_95=coef_list$summary_group_coefs$low95HDI,
Exp=Exp_name) %>%
separate(name, c("coef","choice","condition"), "_")
return(coefs)
}
fits <- bind_rows(arrange_fits(coef_list_Exp2, "Exp2"),
arrange_fits(coef_list_Exp3, "Exp3"),
arrange_fits(coef_list_Exp6b, "Exp6b"),
arrange_fits(coef_list_Exp7a, "Exp7a"),
arrange_fits(coef_list_Exp8, "Exp8"))
fits <- mutate(fits, y_loc = ifelse(condition %in% c("Pairs", "Self", "Same", "HighRepeat", "HighReward"),
0.1, 0.2))
fits_medians <- fits %>% dplyr::select(-c(high_95,low_95)) %>% spread(coef, median)
dratings <- seq(from=-3, to=3, by=.001)
plot.data.fits <- fits_medians %>% slice(rep(1:n(), each = length(dratings))) %>%
mutate(delta_ratings = rep(dratings,nrow(fits)),
y = invlogit(Intercept + Slope * delta_ratings))
fits
plot.data.fits
rm(plot.data.fits)
fits_medians %>% slice(rep(1:n(), each = length(dratings))) %>%
mutate(delta_ratings = rep(dratings,nrow(fits)),
y = invlogit(Intercept + Slope * delta_ratings))
plot.data.fits <- fits_medians %>% slice(rep(1:n(), each = length(dratings))) %>%
mutate(delta_ratings = rep(dratings,nrow(fits_medians)),
y = invlogit(Intercept + Slope * delta_ratings))
arrange_post_dists <- function(coef_list, Exp_name){
post_dists <- coef_list$posterior_group_coefs %>%
gather() %>%
separate(key, c("coef","choice","condition"), "_") %>%
mutate(Exp=Exp_name)
return(post_dists)
}
plot.data.dists <- bind_rows(arrange_post_dists(coef_list_Exp2, "Exp2"),
arrange_post_dists(coef_list_Exp3, "Exp3"),
arrange_post_dists(coef_list_Exp6b, "Exp6b"),
arrange_post_dists(coef_list_Exp7a, "Exp7a"),
arrange_post_dists(coef_list_Exp8, "Exp8"))
plot.data.dists
exps <- unique(fits$Exp)
p1 <- list(); p2 <- list(); p <- list()
for (i in 1:length(exps)){
curr_fits <- subset(fits, Exp==exps[i])
curr_data_fits <- subset(plot.data.fits, Exp==exps[i])
curr_data_dists <- subset(plot.data.dists, Exp==exps[i])
# for Exp7a, change factor level
if ("Exp7a" %in% curr_fits$Exp){
curr_fits$condition <- factor(as.factor(curr_fits$condition), levels=c("LowReward","HighReward"))
curr_data_fits$condition <- factor(as.factor(curr_data_fits$condition), levels=c("LowReward","HighReward"))
}
p1[[i]] <- ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
p2[[i]] <- ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, fill=condition, linetype=choice)) +
geom_density(alpha=0.3) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = curr_fits) +
geom_point(data=curr_fits, aes(x=median, y=y_loc, color=condition, shape=choice, fill="white"), size=2) +
labs(x="Coef estimates")
p[[i]] <- plot_grid(p1[[i]], p2[[i]], ncol=1, nrow=2)
}
p[[i]]
p[[i]]
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(alpha=0.3) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = curr_fits) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=3) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = curr_fits) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=2) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = curr_fits) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = curr_fits) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(plot.data.dists, coef=="Intercept"),
aes(x=value, fill=condition, linetype=choice)) +
geom_density(alpha=0.3) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = fits) +
geom_point(data=fits, aes(x=median, y=y_loc, color=condition, shape=choice, fill="white"), size=2) +
# geom_errorbarh(data=subset(fits, coef=="Intercept"),
#                aes(xmax = median+high_95, xmin = median-low_95, color=condition, linetype=choice)) +
facet_wrap(.~Exp)
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = curr_fits) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept" & choice=="Unchosen"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice),
size = 1, data = curr_fits) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = subset(curr_fits, coef=="Intercept"),
aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = subset(curr_fits, coef=="Intercept"),
aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
fits
arrange_fits <- function(coef_list, Exp_name){
coefs <- data.frame(name=rownames(coef_list$summary_group_coefs),
median=coef_list$summary_group_coefs$Median,
high_95=coef_list$summary_group_coefs$high95HDI,
low_95=coef_list$summary_group_coefs$low95HDI,
Exp=Exp_name) %>%
separate(name, c("coef","choice","condition"), "_")
return(coefs)
}
fits <- bind_rows(arrange_fits(coef_list_Exp2, "Exp2"),
arrange_fits(coef_list_Exp3, "Exp3"),
arrange_fits(coef_list_Exp6b, "Exp6b"),
arrange_fits(coef_list_Exp7a, "Exp7a"),
arrange_fits(coef_list_Exp8, "Exp8"))
fits <- mutate(fits,
y_loc = ifelse(condition %in% c("Pairs", "Self", "Same", "HighRepeat", "HighReward"), 0.1, 0.2),
choice = factor(as.factor(choice), levels=c("Unchosen","Chosen")))
fits_medians <- fits %>% dplyr::select(-c(high_95,low_95)) %>% spread(coef, median)
dratings <- seq(from=-3, to=3, by=.001)
plot.data.fits <- fits_medians %>% slice(rep(1:n(), each = length(dratings))) %>%
mutate(delta_ratings = rep(dratings,nrow(fits_medians)),
y = invlogit(Intercept + Slope * delta_ratings))
arrange_post_dists <- function(coef_list, Exp_name){
post_dists <- coef_list$posterior_group_coefs %>%
gather() %>%
separate(key, c("coef","choice","condition"), "_") %>%
mutate(Exp=Exp_name)
return(post_dists)
}
plot.data.dists <- bind_rows(arrange_post_dists(coef_list_Exp2, "Exp2"),
arrange_post_dists(coef_list_Exp3, "Exp3"),
arrange_post_dists(coef_list_Exp6b, "Exp6b"),
arrange_post_dists(coef_list_Exp7a, "Exp7a"),
arrange_post_dists(coef_list_Exp8, "Exp8")) %>%
mutate(choice = factor(as.factor(choice), levels=c("Unchosen","Chosen")))
exps <- unique(fits$Exp)
p1 <- list(); p2 <- list(); p <- list()
for (i in 1:length(exps)){
curr_fits <- subset(fits, Exp==exps[i])
curr_data_fits <- subset(plot.data.fits, Exp==exps[i])
curr_data_dists <- subset(plot.data.dists, Exp==exps[i])
# for Exp7a, change factor level
if ("Exp7a" %in% curr_fits$Exp){
curr_fits$condition <- factor(as.factor(curr_fits$condition), levels=c("LowReward","HighReward"))
curr_data_fits$condition <- factor(as.factor(curr_data_fits$condition), levels=c("LowReward","HighReward"))
}
p1[[i]] <- ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
p2[[i]] <- ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = subset(curr_fits, coef=="Intercept"),
aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = subset(curr_fits, coef=="Intercept"),
aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
p[[i]] <- plot_grid(p1[[i]], p2[[i]], ncol=1, nrow=2)
}
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = subset(curr_fits, coef=="Intercept"),
aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = subset(curr_fits, coef=="Intercept"),
aes(x=median, y=y_loc, color=condition, shape=choice),
size=2, fill="white") +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = subset(curr_fits, coef=="Intercept"),
aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = subset(curr_fits, coef=="Intercept"),
aes(x=median, y=y_loc, color=condition),
size=4, shape=1) +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = subset(curr_fits, coef=="Intercept"),
aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = subset(curr_fits, coef=="Intercept"),
aes(x=median, y=y_loc, color=condition),
size=4, fill="white", shape=21, stroke=4) +
labs(x="Coef estimates") +
theme(legend.position="none")
ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = subset(curr_fits, coef=="Intercept"),
aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = subset(curr_fits, coef=="Intercept"),
aes(x=median, y=y_loc, color=condition),
size=2, fill="white", shape=21, stroke=2) +
labs(x="Coef estimates") +
theme(legend.position="none")
plot_grid(p1[[i]], p2[[i]], ncol=1, nrow=2, rel_heights = c(1,0.5))
p1[[i]] <- ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
scale_y_continuous(expand=c(0,0), breaks=c(0, 0.5, 1), limits=c(0,1)) +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
p2[[i]] <- ggplot(subset(curr_data_dists, coef=="Intercept"),
aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = subset(curr_fits, coef=="Intercept"),
aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = subset(curr_fits, coef=="Intercept"),
aes(x=median, y=y_loc, color=condition),
size=2, fill="white", shape=21, stroke=2) +
labs(x="Coef estimates") +
theme(legend.position="none")
plot_grid(p1[[i]], p2[[i]], ncol=1, nrow=2, rel_heights = c(1,0.5))
exps <- unique(fits$Exp)
p1 <- list(); p2 <- list(); p <- list()
for (i in 1:length(exps)){
curr_fits <- subset(fits, Exp==exps[i] & coef=="Intercept")
curr_data_fits <- subset(plot.data.fits, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
curr_data_dists <- subset(plot.data.dists, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
# for Exp7a, change factor level
if ("Exp7a" %in% curr_fits$Exp){
curr_fits$condition <- factor(as.factor(curr_fits$condition), levels=c("LowReward","HighReward"))
curr_data_fits$condition <- factor(as.factor(curr_data_fits$condition), levels=c("LowReward","HighReward"))
}
p1[[i]] <- ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
scale_y_continuous(expand=c(0,0), breaks=c(0, 0.5, 1), limits=c(0,1)) +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
p2[[i]] <- ggplot(curr_data_dists, aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = curr_fits, aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition),
size=2, fill="white", shape=21, stroke=2) +
labs(x="Coef estimates") +
theme(legend.position="none")
p[[i]] <- plot_grid(p1[[i]], p2[[i]], ncol=1, nrow=2, rel_heights = c(1,0.5))
}
exps <- unique(fits$Exp)
p1 <- list(); p2 <- list(); p <- list()
curr_fits <- subset(fits, Exp==exps[i] & coef=="Intercept")
curr_data_fits <- subset(plot.data.fits, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
curr_data_dists <- subset(plot.data.dists, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
if ("Exp7a" %in% curr_fits$Exp){
curr_fits$condition <- factor(as.factor(curr_fits$condition), levels=c("LowReward","HighReward"))
curr_data_fits$condition <- factor(as.factor(curr_data_fits$condition), levels=c("LowReward","HighReward"))
}
ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
scale_y_continuous(expand=c(0,0), breaks=c(0, 0.5, 1), limits=c(0,1)) +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
ggplot(curr_data_dists, aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = curr_fits, aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition),
size=2, fill="white", shape=21, stroke=2) +
labs(x="Coef estimates") +
theme(legend.position="none")
curr_fits <- subset(fits, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
curr_data_fits <- subset(plot.data.fits, Exp==exps[i] & coef=="Intercept")
curr_data_dists <- subset(plot.data.dists, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
subset(fits, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
subset(plot.data.fits, Exp==exps[i] & coef=="Intercept")
plot.data.fits
curr_fits <- subset(fits, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
curr_data_fits <- subset(plot.data.fits, Exp==exps[i])
curr_data_dists <- subset(plot.data.dists, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
scale_y_continuous(expand=c(0,0), breaks=c(0, 0.5, 1), limits=c(0,1)) +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
subset(plot.data.fits, Exp==exps[i])
plot.data.fits
ggplot(curr_data_dists, aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = curr_fits, aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition),
size=2, fill="white", shape=21, stroke=2) +
labs(x="Coef estimates") +
theme(legend.position="none")
curr_fits
arrange_fits <- function(coef_list, Exp_name){
coefs <- data.frame(name=rownames(coef_list$summary_group_coefs),
median=coef_list$summary_group_coefs$Median,
high_95=coef_list$summary_group_coefs$high95HDI,
low_95=coef_list$summary_group_coefs$low95HDI,
Exp=Exp_name) %>%
separate(name, c("coef","choice","condition"), "_")
return(coefs)
}
fits <- bind_rows(arrange_fits(coef_list_Exp2, "Exp2"),
arrange_fits(coef_list_Exp3, "Exp3"),
arrange_fits(coef_list_Exp6b, "Exp6b"),
arrange_fits(coef_list_Exp7a, "Exp7a"),
arrange_fits(coef_list_Exp8, "Exp8"))
fits <- mutate(fits,
y_loc = ifelse(condition %in% c("Pairs", "Self", "Same", "HighRepeat", "HighReward"), 0.1, 0.2),
choice = factor(as.factor(choice), levels=c("Unchosen","Chosen")))
fits_medians <- fits %>% dplyr::select(-c(high_95,low_95)) %>% spread(coef, median)
dratings <- seq(from=-3, to=3, by=.001)
plot.data.fits <- fits_medians %>% slice(rep(1:n(), each = length(dratings))) %>%
mutate(delta_ratings = rep(dratings,nrow(fits_medians)),
y = invlogit(Intercept + Slope * delta_ratings))
arrange_post_dists <- function(coef_list, Exp_name){
post_dists <- coef_list$posterior_group_coefs %>%
gather() %>%
separate(key, c("coef","choice","condition"), "_") %>%
mutate(Exp=Exp_name)
return(post_dists)
}
plot.data.dists <- bind_rows(arrange_post_dists(coef_list_Exp2, "Exp2"),
arrange_post_dists(coef_list_Exp3, "Exp3"),
arrange_post_dists(coef_list_Exp6b, "Exp6b"),
arrange_post_dists(coef_list_Exp7a, "Exp7a"),
arrange_post_dists(coef_list_Exp8, "Exp8")) %>%
mutate(choice = factor(as.factor(choice), levels=c("Unchosen","Chosen")))
# Plot logistic fits with posterior distribution
exps <- unique(fits$Exp)
p1 <- list(); p2 <- list(); p <- list()
for (i in 1:length(exps)){
curr_fits <- subset(fits, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
curr_data_fits <- subset(plot.data.fits, Exp==exps[i])
curr_data_dists <- subset(plot.data.dists, Exp==exps[i] & coef=="Intercept" & choice=="Unchosen")
# for Exp7a, change factor level
if ("Exp7a" %in% curr_fits$Exp){
curr_fits$condition <- factor(as.factor(curr_fits$condition), levels=c("LowReward","HighReward"))
curr_data_fits$condition <- factor(as.factor(curr_data_fits$condition), levels=c("LowReward","HighReward"))
}
p1[[i]] <- ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition, linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
scale_y_continuous(expand=c(0,0), breaks=c(0, 0.5, 1), limits=c(0,1)) +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
p2[[i]] <- ggplot(curr_data_dists, aes(x=value, color=condition, linetype=choice)) +
geom_density(size=1) +
theme +
geom_vline(xintercept=0, linetype="dashed",size=0.5) +
scale_y_continuous(expand=c(0,0)) +
geom_segment(data = curr_fits, aes(x = low_95, y = y_loc, xend = high_95, yend = y_loc, color=condition, linetype=choice), size = 1) +
geom_point(data = curr_fits, aes(x=median, y=y_loc, color=condition),
size=2, fill="white", shape=21, stroke=2) +
labs(x="Coef estimates") +
theme(legend.position="none")
p[[i]] <- plot_grid(p1[[i]], p2[[i]], ncol=1, nrow=2, rel_heights = c(1,0.5))
}
plot_grid(plotlist=p, ncol=length(exps))
curr_data_fits
unique(curr_data_fits$choice)
p1[[i]] <- ggplot(curr_data_fits, aes(x=delta_ratings, y=y, color=condition,
linetype=choice)) +
geom_vline(xintercept=0, linetype="dashed", size=0.5) +
geom_hline(yintercept=0.5, linetype="dashed",size=0.5) +
geom_line(lwd=1) +
theme + point_plot_theme +
scale_y_continuous(expand=c(0,0), breaks=c(0, 0.5, 1), limits=c(0,1)) +
theme(axis.title=element_blank())
if (exps[i] == "Exp2"){
p1[[i]] <- p1[[i]] +
theme(legend.position="none") +
scale_color_manual(breaks=c(unique(curr_data_fits$condition)),values=c("black")) +
labs(x="Delta normalized ratings\n(Gain - No Gain)", y="Predicted P(choose Gain)")
} else {
p1[[i]] <- p1[[i]] + theme(legend.position=c(0.88,0.88))
}
p1[[i]]
p1[[i]] + theme(legend.position=c(0.8,0.05))
p1[[i]] + theme(legend.position=c(0.8,0.3))
p1[[i]] + theme(legend.position=c(0.7,0.3))
p1[[i]] + theme(legend.position=c(0.6,0.3))
